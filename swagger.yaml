openapi: 3.0.0
info:
  description: Test project for Effective Mobile.
  title: Subscription Microservice API
  version: 1.0.0
servers:
  - url: http://localhost:8080/testservice/v1
    description: Development server
paths:
  /subscriptions:
    get:
      summary: Get subscriptions
      description: Returns either a single subscription or list of subscriptions based on query parameters. If single subscription is requested the id parameter needs to be present and list parameter needs to be false. Otherwise, the list parameter needs to be set to true
      operationId: getSubscriptions
      parameters:
        - name: list
          in: query
          description: If true, returns list of all subscriptions, otherwise requires an id parameter and returns information about subscription with given id. If not present, defaults to false.
          schema:
            type: boolean
          required: false
        - name: id
          in: query
          description: ID of a specific subscription to retrieve
          schema:
            type: integer
            format: int64
          required: false
      responses:
        '200':
          description: Successfully retrieved subscription(s)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SubscriptionResponse'
                  - $ref: '#/components/schemas/SubscriptionResponseList'
              examples:
                SubscriptionResponse:
                  $ref: '#/components/examples/SingleSubscriptionExample'
                SubscriptionResponseList:
                  $ref: '#/components/examples/MultipleSubscriptionsExample'
                
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error400:
                  $ref: '#/components/examples/Error400'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error500:
                  $ref: '#/components/examples/Error500'

    post:
      summary: Create a new subscription
      description: Creates a database entry with given parameters
      operationId: createSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
      responses:
        '201':
          description: Subscription created successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a subscription
      description: Updates the database entry with given id.
      operationId: updateSubscription
      parameters:
          - name: id
            in: query
            description: The ID of the subscription to update
            required: true
            schema:
              type: integer
              format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequest'
      responses:
        '200':
          description: Subscription updated successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error400:
                  $ref: '#/components/examples/Error400'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error500:
                  $ref: '#/components/examples/Error500'

    delete:
      summary: Delete a subscription
      description: Deletes a database entry with given id
      operationId: deleteSubscription
      parameters:
        - name: id
          in: query
          description: The ID of the subscription to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Subscription deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error400:
                  $ref: '#/components/examples/Error400'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error500:
                  $ref: '#/components/examples/Error500'

  /subscriptions/sum:
    get:
      summary: Get subscriptions sum
      description: Returns a sum of subscriptions from given time period. There is an option for filtering subscriptions by user td and service name.
      operationId: getSubscriptionsSum
      parameters:
        - name: from
          in: query
          description: The starting date of a period to sum
          required: true
          schema:
            $ref: '#/components/schemas/CustomTime'
        - name: to
          in: query
          description: The ending date of a period to sum
          required: true
          schema:
            $ref: '#/components/schemas/CustomTime'
        - name: user_id
          in: query
          description: The ID of a user to filter by
          schema:
            type: string
        - name: service_name
          in: query
          description: The name of a service to filter by
          schema:
            type: string
      responses:
        '200':
          description: Subscription deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sum'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error400:
                  $ref: '#/components/examples/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error500:
                  $ref: '#/components/examples/Error500'

components:
  schemas:
    CustomTime:
      type: string
      format: date
      example: "08-2025"

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message details
      required:
        - error
      example:
        error: "subscription with given id does not exist"

    CreateSubscriptionRequest:
      type: object
      properties:
        service_name:
          type: string
          description: The name of the service
        price:
          type: integer
          format: int64
          description: The price of the subscription
        user_id:
          type: string
          description: The UUID of the user
        start_date:
          $ref: '#/components/schemas/CustomTime'
        end_date:
          $ref: '#/components/schemas/CustomTime'
      required:
        - service_name
        - price
        - user_id
        - start_date
      example:
        service_name: "Yandex Plus"
        price: 100
        user_id: "9876d5d2-7f70-4375-9d41-07183b9a75e9"
        start_date: "02-2025"

    UpdateSubscriptionRequest:
      type: object
      properties:
        service_name:
          type: string
          description: The name of the service
          example: "Kinopoisk"
        price:
          type: integer
          format: int64
          description: The price of the subscription
          example: 299
        user_id:
          type: string
          description: The UUID of the user
        start_date:
          $ref: '#/components/schemas/CustomTime'
        end_date:
          $ref: '#/components/schemas/CustomTime'
      required:
        - id

    SubscriptionResponse:
      type: object
      description: The response, containing single subscription's data
      properties:
        id:
          type: integer
          format: int64
          example: 1
        service_name:
          type: string
        price:
          type: integer
          format: int64
        user_id:
          type: string
        start_date:
          $ref: '#/components/schemas/CustomTime'
        end_date:
          $ref: '#/components/schemas/CustomTime'

    SubscriptionResponseList:
      type: array
      description: The response, containing a list of subscription objects. Each one is of SubscriptionResponse schema
      items:
        $ref: '#/components/schemas/SubscriptionResponse'

    Sum:
      type: object
      properties:
        sum:
          type: integer
          format: int64
          example: 1050
          
  examples:
    Error400:
      summary: Bad request error
      value:
        error: "error validating payload"
    Error500:
      summary: Internal server error
      value:
        error: "database error"
    SingleSubscriptionExample:
      summary: Example of a single subscription response
      value:
        id: 1
        service_name: "Netflix"
        price: 15
        user_id: "user-123"
        start_date: "01-2015"
        end_date: "05-2015"
    MultipleSubscriptionsExample:
      summary: Example of multiple subscriptions response
      value:
        - id: 1
          service_name: "Netflix"
          price: 15
          user_id: "user-123"
          start_date: "01-2015"
          end_date: "05-2015"
        - id: 2
          service_name: "Spotify"
          price: 10
          user_id: "user-456"
          start_date: "02-2024"
